jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    password: ${JASYPT_PASSWORD}

spring:
  application:
    name: pay
  datasource:
    url: ENC(NToQ9DCkOSTCqQ+C9fL6DXXhDB4MaPUDYSCSr55jiiddiKGcEelaCV8onwXwFct4uoP0xfh1YpmF/bDiEDWMQ4aa9MyDP1Th)
    username: ENC(XhGT41xwg0J9hSXkV9tPjQ==)
    password: ENC(cOWaniGDoCFEXR9v+wRBVEwsJ5Hg6vQN)
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: pay-service-group
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.ByteArrayDeserializer
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: SCRAM-SHA-256
        sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="user1" password="mzdCmxMG42";
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      transaction-status: transaction-status
  data:
    redis:
      host: localhost
      port: 6379
      password:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

auth:
  service:
    url: http://localhost:8888
transaction:
  service:
    url: http://localhost:2222

jwt:
  secret: ENC(29vK1PECW2Jls40pgFDgITil5EnUObTxvycoWtm7Orm+Xj93YE5bZHjPKPLcaQNsGnddf5uX+lc=)
  access-token-expiration: ENC(ch/UXDWKupu5PnMpcI3DEg==)

client:
  url: http://localhost:3000
logging:
  level:
    org:
      springframework:
        web: DEBUG